version: 2.1

executors:
  node-maintenance:
    docker:
      - image: circleci/node:12-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 10000
  node-active:
    docker:
      - image: circleci/node:14-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 10000
  node-current:
    docker:
      - image: circleci/node:16-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 10000

orbs:
  win: circleci/windows@2.2.0

jobs:
  pr:
    executor: node-active
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run: npm test
      - store_test_results:
          path: testResults

  build:
    executor: node-active
    environment:
      - CC_TEST_REPORTER_ID=8bc3a050a2f8ef1cc460e5f4c72d18a689c8ae0981bf494031eb4eb28bbd0b0b
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Version
          command: node tasks/version.js
      - run: npm test
      - run:
          name: Docs and Static Analysis
          command: |
            scripts/codeclimate
            cat ./coverage/lcov.info | node_modules/coveralls/bin/coveralls.js
            scripts/sonar
            npm run jsdoc && node tasks/deploy/docs.js
      - run:
          name: Dist
          command: node tasks/dist.js
      - store_test_results:
          path: testResults
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - tasks
            - scripts
            - Procfile

  windows:
    executor: win/default
    environment:
      - MB_SLOW_TEST_TIMEOUT: 10000
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run: npm run windows
      - store_test_results:
          path: testResults

  maintenanceOutOfProcessImposters:
    executor: node-maintenance
    environment:
      - MB_PORT: 3535
      - MB_PERSISTENT: true
      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Prepare to run out of process protocol implementations
          command: node tasks/createProtocolsFile.js outOfProcess.json
      - run:
          name: Test
          command: |
            node tasks/mb.js start --allowInjection --mock --localOnly --protofile outOfProcess.json
            (cd dist/test && npm test)
      - store_test_results:
          path: dist/test/testResults

  currentWithFileDB:
    executor: node-current
    environment:
      - MB_PORT: 3535
      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: |
            node tasks/mb.js start --allowInjection --mock --localOnly --datadir .mbdb
            (cd dist/test && npm test)
      - store_test_results:
          path: dist/test/testResults

  performance:
    executor: node-active
    environment:
      - MB_PORT: 3535
      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: (cd dist/test && npm run perf)
      - store_test_results:
          path: dist/test/testResults

  web:
    executor: node-active
    environment:
      - MB_PORT: 3535
      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: |
            node tasks/mb.js start --allowInjection --mock --localOnly
            (cd dist/test && npm run web)
      - store_test_results:
          path: dist/test/testResults

  deploy:
    executor: node-active
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - attach_workspace:
          at: .
      - run:
          name: Publish npm
          command: scripts/publishNpm
      - run:
          name: Publish Docker
          command: |
            export MB_VERSION=`scripts/printVersion`
            scripts/publishDocker $MB_VERSION
      - run:
          name: Deploy to Heroku
          command: scripts/publishHeroku mountebank-dev

  # The release pipeline doesn't re-run tests as there should be no code commit, only a git tag to trigger release
  # It also doesn't change the version in the package.json or add a beta tag to npm
  release:
    executor: node-active
    environment:
      - MB_RELEASE: true
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Dist
          command: node tasks/dist.js
      - run:
          name: Publish npm
          command: scripts/publishNpm
      - run:
          name: Publish Docker
          command: |
            export MB_VERSION=`scripts/printVersion`
            scripts/publishDocker $MB_VERSION
      - run:
          name: Deploy to Heroku
          command: scripts/publishHeroku mountebank

workflows:
  version: 2
  pipeline:
    jobs:
      - pr:
          filters:
            branches:
              ignore: master
      - build:
          filters:
            branches:
              only: master
      - windows:
          filters:
            branches:
              only: master
      - maintenanceOutOfProcessImposters:
          requires:
            - build
            - windows
          filters:
            branches:
              only: master
      - currentWithFileDB:
          requires:
            - build
            - windows
          filters:
            branches:
              only: master
      - performance:
          requires:
            - build
            - windows
          filters:
            branches:
              only: master
      - web:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - maintenanceOutOfProcessImposters
            - currentWithFileDB
            - performance
            - web
          filters:
            branches:
              only: master
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

